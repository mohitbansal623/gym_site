<?php
/**
 * Implements hook_user_login().
 */
function client_log_notify_coach_user_login(&$edit, $account) {
  if (user_has_role(5, $account)) {
    drupal_goto('coach-dashboard/' . $account->uid);
  }
  elseif (user_has_role(6, $account)) {
    drupal_goto('client-dashboard/' . $account->uid);
  }
  elseif (user_has_role(4, $account)) {
    drupal_goto('admin-dashboard');
  }
}

/**
 * Implements hook_menu().
 */
function client_log_notify_coach_menu() {
  $items['notifications'] = array(
    'page callback' => '_notifications_populate',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );

  $items['clear-notification'] = array(
    'page callback' => '_notifications_status_response',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );

  $items['coach-dashboard/%'] = array(
    'page callback' => 'get_all_client_data_for_coach',
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );

  $items['unpublish-goal/%'] = array(
    'page callback' => 'set_unpublish_goal',
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );

  $items['complete-goal/%'] = array(
    'page callback' => 'set_complete_goal',
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );

   $items['publish-goal/%'] = array(
    'page callback' => 'set_publish_goal',
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );

  return $items;
}


function set_unpublish_goal($nid) {
  global $user;
  $num_updated = db_update('node')
    ->fields(array(
      'status' => 0,
    ))
    ->condition('nid', $nid, '=')
    ->execute();

  drupal_goto('edit-goal/' . $user->uid);
}

function set_publish_goal($nid) {
  global $user;
  $num_updated = db_update('node')
    ->fields(array(
      'status' => 1,
    ))
    ->condition('nid', $nid, '=')
    ->execute();

  $uid = $user->uid;
  update_published_value_goals($uid, $nid);

  drupal_goto('edit-goal/' . $user->uid);
}


function set_complete_goal($nid) {
  $node = node_load($nid);

  if (isset($node->field_goal_complete['und'][0]['value'])) {
    $node->field_goal_complete['und'][0]['value'] = 1;

    node_save($node);

    drupal_goto('edit-goal/' . $node->uid);
  }
}

function _notifications_populate() {
  global $user;
  $messages = get_notifications_for_coach($user->uid);
  $messages['popup_messages'] = $messages;
  if (count($messages) == 0) {
    $messages = array(0 => array("message" => "No notification message is available", "id" => "nomsg"));
  }

  $output = theme('notification_popup', array('coach_messages' => $messages));

  return $output;

}


/**
 * Implements hook_theme().
 */
function client_log_notify_coach_theme() {
  return array(
    'notification_popup' => array(
      'template' => 'notification_popup',
      'variables' => array('coach_messages' => NULL,),
      'path' => drupal_get_path('module', 'client_log_notify_coach') . '/templates',
    ),

    'coach_dashboard' => array(
      'template' => 'coach_dashboard',
      'variables' => array('coach_dashboard' => NULL,),
      'path' => drupal_get_path('module', 'client_log_notify_coach') . '/templates',
    ),
  );
}

function client_log_notify_coach_node_presave($node) {
  global $user;

  if ($node->type == 'daily_log') {
    $plan_value = isset($node->field_was_today_on_plan['und'][0]['value'])?$node->field_was_today_on_plan['und'][0]['value']: NULL;

    // Get the coach id under which the client is trained
    $query = db_select('field_data_field_client_ref', 'at')
      -> fields('coach', array('field_coach_ref_target_id'));
    $query->join('field_data_field_coach_ref', 'coach', "coach.entity_id = at.entity_id");
    $query->condition('at.bundle', 'goals');
    $query->condition('at.field_client_ref_target_id', $user->uid);
    $coach_id = $query->execute()->fetchCol();
    $coach_id = !empty($coach_id)? $coach_id[0] : NULL;

    if ($plan_value == 'no') {
      // Get Client Name from users table
      $client_name = db_query("Select name from drup_users where uid =" . $user->uid . "")->fetchCol();

      $client_name = !empty($client_name)? $client_name[0]: NULL;
      $message = $client_name . " has replied " . $plan_value . " for " . date("Y-m-d");

      // Insert in table to notify coach about this.
      $nid = db_insert('notify_coach')
          ->fields(array(
            'client_id' => $user->uid,
            'message' => $message,
            'status' => 0,
            'time_stamp' => REQUEST_TIME,
            'coach_id' => $coach_id,
          ))
      ->execute();
    }
  }

  // elseif ($node->type == 'check_in') {
  //   $coach_id = $node->uid;
  //   $client_id = isset($node->field_client_ref[$node->language][0]['target_id']) ? $node->field_client_ref[$node->language][0]['target_id']: NULL;
  //   $fid = isset($node->field_progress_picture_front[$node->language][0]['fid'])? $node->field_progress_picture_front[$node->language][0]['fid']: NULL;

  //   set_current_progress_pic($coach_id, $client_id, $fid, $node->language);

  // }

  elseif ($node->type == 'goals') {
    $goal_value = isset($node->field_goal['und'][0]['value'])? $node->field_goal['und'][0]['value']: NULL;

    $node->title = $node->field_goal['und'][0]['value'];

    update_published_value_goals($node->uid, $node->nid);
  }
}

function update_published_value_goals($uid, $nid) {
  $query = db_select('node', 'n')
        ->fields('n', array('nid'))
        ->condition('n.type', 'goals')
        ->condition('n.uid', $uid);

  $result = $query->execute()->fetchCol();

  if (!empty($result)) {
    foreach ($result as $key) {
      if ($nid != $key) {
        $num_updated = db_update('node')
          ->fields(array(
            'status' => 0,
          ))
          ->condition('nid', $key, '=')
          ->execute();
      }
    }
  }
}


function get_completion_value($nid) {
  $query = db_select('node', 'at')
      -> fields('c', array('field_goal_complete_value'));
  $query->join('field_data_field_goal_complete', 'c', "c.entity_id = at.nid");
  $query->condition('c.bundle', 'goals');
  $query->condition('at.nid', $nid);
  $complete = $query->execute()->fetch();

  if (!empty($complete)) {
    return $complete->field_goal_complete_value;
  }

  return 0;
}


function get_notifications_for_coach($uid) {
  $query = db_select('notify_coach', 'at')
        -> fields('at', array('message' , 'time_stamp', 'seq_id'))
        -> condition('at.coach_id', $uid)
        -> condition('at.status', 0)
        -> orderBy('at.time_stamp', 'DESC');

  $messages = $query->execute()->fetchAll();

  $message = array();
  if (isset($messages)) {
    foreach($messages as $key => $value) {
      $message[$key]['message'] =  $value->message;
      $message[$key]['id']  = $value->seq_id;
      $message[$key]['time_stamp']  = $value->time_stamp;
    }
  }

  return $message;
}


function _notifications_status_response() {
  $id = $_POST['id'];
  update_msg_status_co_op($id);
}


/**
 * Update message status for co op
 */
function update_msg_status_co_op($id) {
  $num_updated = db_update('notify_coach')
  ->fields(array(
    'status' => 1,
  ))
  ->condition('seq_id', $id, '=')
  ->execute();
}



/**
 * get total no of clients under particular coach
 */
function get_total_no_of_clients_under_each_coach($uid) {
  $query = db_select('field_data_field_client_ref', 'at')
      -> fields('at', array('field_client_ref_target_id'));
  $query->join('field_data_field_coach_ref', 'coach', "coach.entity_id = at.entity_id");
  $query->condition('at.bundle', 'goals');
  $query->condition('coach.field_coach_ref_target_id', $uid);
  $client_id = $query->execute()->rowCount();

  return $client_id;
}

/**
 * get end date and find remaining days
 */
function get_remaining_days($nid) {
  $node = node_load($nid);

  if (isset($node->field_goal_date['und'][0]['value2']) && !empty($node->field_goal_date['und'][0]['value2'])) {
    $end_date = explode(' ', $node->field_goal_date['und'][0]['value2']);

    $end_date = date_create($end_date[0]);

    $current_date = date_create(date('Y-m-d'));

    $diff = date_diff($current_date, $end_date);

    $days = 0;
    if (!empty($diff) && $diff->days > 0) {
      $days = $diff->days;
    }

    return $days;
   }
}


/**
 * Implements hook_form_alter()
 */
function client_log_notify_coach_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  $form['title']['#access'] = FALSE;
  $alias = drupal_get_path_alias();
  if ($alias == 'node/add/goals') {
    if ($form_id == 'goals_node_form') {
      $form['field_goal_complete']['#access'] = FALSE;
      // $form['field_current_progress_pic']['#access'] = FALSE;
      // $no_value = isset($form['field_client_ref']['und']['#options']['_none'])?$form['field_client_ref']['und']['#options']['_none']: NULL;
      // $eligible_clients = array(0 => $no_value) + get_eligible_clients('goals');

      // $form['field_client_ref']['und']['#options'] = $eligible_clients;
      // $form['field_coach_ref']['und']['#options'] = array($user->uid => $user->name);
    }
  }
  // else if ($alias == 'node/add/path-to-fitness') {
  //   if ($form_id == 'path_to_fitness_node_form'){
  //    $no_value = isset($form['field_client_ref']['und']['#options']['_none'])?$form['field_client_ref']['und']['#options']['_none']: NULL;
  //     $eligible_clients = array(0 => $no_value) + get_related_clients($user->uid);
  //     $form['field_client_ref']['und']['#options'] = $eligible_clients;
  //   }
  // }
  else if ($alias == 'node/add/check-in') {
    if ($form_id == 'check_in_node_form') {
  //     $no_value = isset($form['field_client_ref']['und']['#options']['_none'])?$form['field_client_ref']['und']['#options']['_none']: NULL;
      // $eligible_clients = array(0 => $no_value) + get_related_clients();
      global $user;
      $data = get_goal_and_coach($user->uid);
      $coach = isset($data) ? $data->field_coach_ref_target_id: NULL;
      if (!empty($coach)) {
        $query = db_select('users', 'u')
          ->fields('u', array('name'))
          ->condition('u.uid', $coach);

        $coach = $query->execute()->fetch();
        $coach = $coach->name;
      }

      $no_value = isset($form['field_coach_ref']['und']['#options']['_none'])?$form['field_coach_ref']['und']['#options']['_none']: NULL;
      $form['field_coach_ref']['und']['#options'] = array(0 => $coach);
      $form['field_goal']['und'][0]['value']['#default_value'] = $data->title;
    }
  }
}


function get_goal_and_coach($uid) {
  $query = db_select('node', 'at')
      -> fields('at', array('title'))
      -> fields('c', array('field_coach_ref_target_id'));
  $query->join('field_data_field_coach_ref', 'c', "c.entity_id = at.nid");
  $query->condition('c.bundle', 'goals');
  $query->condition('at.status', 1);
  $query->condition('at.uid', $uid);
  $complete = $query->execute()->fetch();

  if (!empty($complete)) {
    return $complete;
  }
}

/**
 * Fetch eligible clients for "goal", "path to fitness" when creating a new goal or path to fitness.
 */
function get_eligible_clients($bundle) {
  $role_id = db_query("Select rid from role where name = 'client'")->fetch();
  $client_name = array();

  if (!empty($role_id)) {
    $rid = $role_id->rid;
  }

  $query = db_select('users', 'at')
    ->distinct()
    -> fields('at', array('uid','name'));
  $query-> leftjoin('field_data_field_client_ref', 'client', "client.field_client_ref_target_id = at.uid");
  $query->join('users_roles', 'role', "role.uid = at.uid");
  $query->condition('role.rid', $rid);
  $query->condition('at.status', 1);

  $query->condition('client.field_client_ref_target_id', NULL);
  $client_id = $query->execute()->fetchAllKeyed(0);

  if (!empty($client_id)) {
    return $client_id;
  }
  return array();
}

/**
 *  Fetch clients for "check in" under a particular coach
 */
function get_related_clients($coach_id = NULL) {
  global $user;
  if (!isset($coach_id)) {
    $coach_id = $user->uid;
  }
  $role_id = db_query("Select rid from role where name = 'client'")->fetch();
  $client_name = array();

  if (!empty($role_id)) {
    $rid = $role_id->rid;
  }

  $query = db_select('node', 'n')
    ->distinct();
  $query->join('field_data_field_coach_ref', 'coach', "coach.entity_id = n.nid");
  $query->join('field_data_field_client_ref', 'client', "client.entity_id = n.nid");
  $query->join('users', 'at', "client.field_client_ref_target_id = at.uid");
  $query->join('users_roles', 'role', "role.uid = at.uid");
  $query->condition('role.rid', $rid);
  $query->condition('n.type', 'goals');
  $query->condition('coach.field_coach_ref_target_id', $coach_id);
  $query->fields('at', array('uid','name'));
  $query->condition('at.status', 1);
  $client_id = $query->execute()->fetchAllKeyed(0);

  if (!empty($client_id)) {
    return $client_id;
  }
  return array();
}

/**
 *  Coach Dashboard
 */
function get_all_client_data_for_coach($coach_id) {
  if (is_numeric($coach_id)) {
    $role_id = db_query("Select rid from role where name = 'client'")->fetch();
    $client_name = $client_data = array();

    if (!empty($role_id)) {
      $rid = $role_id->rid;
    }

    $query = db_select('node', 'n')
      ->distinct();
    $query->leftjoin('field_data_field_coach_ref', 'coach', "coach.entity_id = n.nid");
    $query->leftjoin('field_data_field_client_ref', 'client', "client.entity_id = n.nid");
    $query->leftjoin('field_data_field_goal', 'goal', "goal.entity_id = n.nid");
    $query->leftjoin('users', 'at', "client.field_client_ref_target_id = at.uid");
    $query->leftjoin('field_data_field_first_name', 'fn', "fn.entity_id = at.uid");
    $query->leftjoin('field_data_field_last_name', 'ln', "ln.entity_id = at.uid");
    $query->leftjoin('users_roles', 'role', "role.uid = at.uid");
    $query->condition('role.rid', $rid);
    $query->condition('n.type', 'goals');
    $query->condition('coach.field_coach_ref_target_id', $coach_id);
    $query->fields('fn', array('field_first_name_value'));
    $query->fields('ln', array('field_last_name_value'));
    $query->fields('goal', array('field_goal_value'));
    $query->fields('n', array('nid'));
    $query->fields('at', array('uid'));
    $query->condition('at.status', 1);
    $client_id = $query->execute()->fetchAll();
    if (!empty($client_id)) {
      foreach ($client_id as $key => $value) {
        $full_name = $value->field_first_name_value . ' ' . $value->field_last_name_value;
        $client_data[$key]['full_name'] = $full_name;
        $client_data[$key]['goal'] = $value->field_goal_value;
        $client_data[$key]['remaining_days'] = get_remaining_days($value->nid);
        $client_data[$key]['bodyfat_lost'] = get_recent_body_fat_percentage($value->uid);
        $client_data[$key]['diet_adherence'] = get_diet_adherence($value->uid);
        $client_data[$key]['cm_loss'] = get_cm_loss($value->uid);
        $client_data[$key]['mm_loss'] = get_mm_loss($value->uid);
        $client_data[$key]['avg_daily_activity'] = get_avg_daily_activity($value->uid);
        $client_data[$key]['avg_training_sessions'] = get_avg_training_sessions($value->uid);
        $client_data[$key]['link'] =  "/client-daily-log/" . $value->uid;
      }
    }

    if (!empty($client_data)) {
      $variables = array();
      $variables = $client_data;
    }

    else {
      $variables['no-data'] = 'No data to display';
    }

    $output = theme('coach_dashboard', array('coach_dashboard' => $variables));
    return $output;
  }

  return FALSE;
}

// /*
// **  Body fat loss under of a client
// */

// function get_recent_body_fat_percentage($client_id) {
//   $query = db_select('node', 'n')
//     ->distinct();
//   $query->join('field_data_field_client_ref', 'client', "client.entity_id = n.nid");
//   $query->join('field_data_field_percent_bodyfat', 'fn', "fn.entity_id = n.nid");
//   $query->condition('n.type', 'check_in');
//   $query->condition('client.field_client_ref_target_id', $client_id);
//   $query->fields('n', array('nid'));
//   $query->fields('fn', array('field_percent_bodyfat_value'));
//   $result = $query->execute()->fetchAllKeyed(0);
//   if (!empty($result)) {
//     ksort($result);
//     $result = array_values($result);
//     $length = count($result);
//     $body_fat = $result[0] - $result[$length-1];
//   }
//   else {
//     $body_fat = 0;
//   }
//   return $body_fat;
// }


/*
** Total avg body fat loss under a coach
*/

function total_avg_body_fat_loss_under_coach($coach_id) {
  $client_list = get_related_clients($coach_id);
  $count = count($client_list);
  $total_fat_loss = 0;
  foreach ($client_list as $client_id => $value) {
    $total_fat_loss += get_recent_body_fat_percentage($client_id);
  }
  $avg = $total_fat_loss / $count;
  return $avg;
}

function get_cm_loss($client_id) {
  $query = db_select('node', 'n')
    ->distinct();
  $query->join('field_data_field_client_ref', 'client', "client.entity_id = n.nid");
  $query->join('field_data_field_total_cm', 'fn', "fn.entity_id = n.nid");
  $query->condition('n.type', 'check_in');
  $query->condition('client.field_client_ref_target_id', $client_id);
  $query->fields('n', array('nid'));
  $query->fields('fn', array('field_total_cm_value'));
  $result = $query->execute()->fetchAllKeyed(0);
  if (!empty($result)) {
    ksort($result);
    $result = array_values($result);
    $length = count($result);
    $cm_loss = $result[0] - $result[$length-1];
  }
  else {
    $cm_loss = 0;
  }
  return $cm_loss;
}


function get_mm_loss($client_id) {
  $query = db_select('node', 'n')
    ->distinct();
  $query->join('field_data_field_client_ref', 'client', "client.entity_id = n.nid");
  $query->join('field_data_field_total_calipers', 'fn', "fn.entity_id = n.nid");
  $query->condition('n.type', 'check_in');
  $query->condition('client.field_client_ref_target_id', $client_id);
  $query->fields('n', array('nid'));
  $query->fields('fn', array('field_total_calipers_value'));
  $result = $query->execute()->fetchAllKeyed(0);
  if (!empty($result)) {
    ksort($result);
    $result = array_values($result);
    $length = count($result);
    $mm_loss = $result[0] - $result[$length-1];
  }
  else {
    $mm_loss = 0;
  }
  return $mm_loss;
}


function get_diet_adherence($client_id) {
  $total_days_logged = db_query("SELECT count(*) as total FROM node where uid =" . $client_id . " and type= 'daily_log'")->fetch();

  $total_days_logged = $total_days_logged->total;

  $query = db_select('node', 'n')
    ->fields('client', array('field_was_today_on_plan_value'));
  $query->join('field_data_field_was_today_on_plan', 'client', "client.entity_id = n.nid");
  $query->condition('n.type', 'daily_log');
  $query->condition('client.field_was_today_on_plan_value', 'yes');
  $query->condition('n.uid', $client_id);
  $result = $query->execute()->rowCount();

  if ($total_days_logged != 0) {
    $diet_adherence = (($result / $total_days_logged)* 100) . "%";
  }
  else {
    $diet_adherence = "0%";
  }

  return $diet_adherence;
}


function get_avg_daily_activity($client_id)  {
  $query = db_select('node', 'n')
    ->fields('client', array('field_daily_activity_level_value'));
  $query->join('field_data_field_daily_activity_level', 'client', "client.entity_id = n.nid");
  $query->condition('n.type', 'daily_log');
  $query->condition('n.uid', $client_id);

  $total_days = $query->execute()->rowCount();
  $daily_activity_value = $query->execute()->fetchCol();


  $sum = array_sum($daily_activity_value);

  if ($total_days != 0) {
    $avg_daily_activity_level = $sum / $total_days;
  }
  else {
    $avg_daily_activity_level = 0;
  }

  return $avg_daily_activity_level;

}


function get_avg_training_sessions($client_id)  {
  $query = db_select('node', 'n')
    ->fields('client', array('field_training_sessions_complete_value'));
  $query->join('field_data_field_training_sessions_complete', 'client', "client.entity_id = n.nid");
  $query->condition('n.type', 'check_in');
  $query->condition('n.uid', $client_id);

  $total_days = $query->execute()->rowCount();
  $daily_activity_value = $query->execute()->fetchCol();


  $sum = array_sum($daily_activity_value);

  if ($total_days != 0) {
    $avg_training_sessions = $sum / $total_days;
  }
  else {
    $avg_training_sessions = 0;
  }

  return $avg_training_sessions;

}



function total_avg_diet_adherence($coach_id) {
  $client_list = get_related_clients($coach_id);
  $count = count($client_list);
  $total_diet_adherence = 0;
  foreach ($client_list as $client_id => $value) {
    $total_diet_adherence += get_diet_adherence($client_id);
  }
  $avg = $total_diet_adherence / $count;

  return $avg;
}


/**
 * Implements hook_token_info().
 */
  function client_log_notify_coach_token_info() {

    // Define token value, body_trim is the token will be used as [node:body_trim]
    $coach_uid['coach_id'] =  array(
      'name' => t("Get Coach ID"),
      'description' => t("Send Notifications"),
    );

    // Return associative array of tokens & token types
    return array(
      'tokens' => array(
        'node' => $coach_uid,
      ),
    );
}

/**
 * Implements hook_tokens().
 */
function client_log_notify_coach_tokens($type, $tokens, array $data = array(), array $options = array()) {
  global $user;
  $replacements = array();

  // Check if token type is user
  if($type == 'node'){
    foreach ($tokens as $name => $original) {
      switch ($name) {
        // Check token is coach_id
        case 'coach_id':
          $coach_uid = get_coach_for_client($user->uid);

          $replacements[$original] = $coach_uid;
          break;
      }
    }
  }
  return $replacements;
}


function get_coach_id_for_notification ($client_id) {
  $query = db_select('field_data_field_coach_ref', 'at')
    ->distinct()
    -> fields('at', array('field_coach_ref_target_id'));
  $query-> join('field_data_field_client_ref', 'client', "client.entity_id = at.entity_id");

  $query->condition('client.field_client_ref_target_id', $client_id);
  $query->condition('at.bundle', 'goals');

  $client_id = $query->execute()->fetchCol();

  if (!empty($client_id)) {
    return $client_id[0];
  }

  return NULL;
}


function set_current_progress_pic($coach_id, $client_id, $fid, $language) {
  $query = db_select('node', 'n')
      ->distinct();
  $query->leftjoin('field_data_field_coach_ref', 'coach', "coach.entity_id = n.nid");
  $query->leftjoin('field_data_field_client_ref', 'client', "client.entity_id = n.nid");

  $query->condition('coach.field_coach_ref_target_id', $coach_id);
  $query->condition('client.field_client_ref_target_id', $client_id);

  $query->fields('n', array('nid'));
  $query->condition('n.status', 1);
  $nid = $query->execute()->fetch();

  $node = node_load($nid->nid);
  $node->field_current_progress_pic[$language][0]['fid'] = $fid;
  node_save($node);
}


function get_coach_name_for_client($client_id) {
  $query = db_select('field_data_field_coach_ref', 'at')
    ->distinct()
    -> fields('at', array('field_coach_ref_target_id'));
  $query-> join('node', 'n', "n.nid = at.entity_id");

  $query->condition('n.uid', $client_id);
  $query->condition('at.bundle', 'goals');
  $query->condition('n.status', 1);

  $coach_id = $query->execute()->fetchCol();

  if (!empty($coach_id)) {
    $uid = $coach_id[0];
    $user = user_load($uid);

    $coach_data = array();

    $coach_data['first_name'] = isset($user->field_first_name['und'][0]['value'])? $user->field_first_name['und'][0]['value']: NULL;
    $coach_data['last_name'] = isset($user->field_last_name['und'][0]['value'])? $user->field_last_name['und'][0]['value']: NULL;

    return $coach_data;

  }

  return NULL;

}


function get_days_on_plan($client_id, $plan_value) {
  $query = db_select('node', 'n')
    ->fields('client', array('field_was_today_on_plan_value'));
  $query->join('field_data_field_was_today_on_plan', 'client', "client.entity_id = n.nid");
  $query->condition('n.type', 'daily_log');
  $query->condition('client.field_was_today_on_plan_value', $plan_value);
  $query->condition('n.uid', $client_id);
  $result = $query->execute()->rowCount();

  return $result;
}


function get_avg_daily_activity_level($client_id) {
  $query = db_select('node', 'n')
    ->fields('daily', array('field_avg_daily_activity_level_value'));
  $query->join('field_data_field_avg_daily_activity_level', 'daily', "daily.entity_id = n.nid");
  $query->condition('n.type', 'goals');
  $query->condition('n.uid', $client_id);
  $result = $query->execute()->fetchCol();

  $total = $query->execute()->rowCount();
  if (!empty($result)) {
    $avg = array_sum($result) / $total;
  }
  else {
    $avg = 0;
  }

  return $avg;
}


/*
**  Body fat loss under of a client
*/

function get_recent_body_fat_percentage($client_id) {
  $query = db_select('node', 'n')
    ->distinct();
  $query->join('field_data_field_percent_bodyfat', 'fn', "fn.entity_id = n.nid");
  $query->condition('n.uid', $client_id);
  $query->condition('n.type', 'goals');
  $query->fields('n', array('nid'));
  $query->fields('fn', array('field_percent_bodyfat_value'));
  $result = $query->execute()->fetchAllKeyed(0);
  if (!empty($result) && count($result) > 1) {
    ksort($result);
    $result = array_values($result);
    $length = count($result);
    $body_fat = $result[0] - $result[$length-1];
  }
  elseif (!empty($result) && count($result) == 1) {
    $result = array_values($result);
    $body_fat = $result[0];
  }
  else {
    $body_fat = 0;
  }
  return $body_fat;
}
