<?php

function user_profile_menu() {
  $menu['register'] = array(
    'title' => 'User Register ',
    'description' => 'Signup Form',
    'page callback' => 'register_form',
    'access callback' => FALSE,
  );

  return $menu;
}

function register_form() {
  $renderable_form = drupal_get_form('registration_form');

  return $renderable_form;

}

function registration_form($form, &$form_state) {
  $form['user_name'] = array(
    '#title' => 'User Name',
    '#description' => 'Enter your user name',
    '#type' => 'textfield',
    '#required' => TRUE,
    '#element_validate' => array('user_name_validate'),

  );


  $form['first_name'] = array(
    '#title' => 'First Name',
    '#description' => 'Enter your first name',
    '#type' => 'textfield',
    '#required' => TRUE,
  );

  $form['last_name'] = array(
    '#title' => 'Last Name',
    '#description' => 'Enter your last name',
    '#type' => 'textfield',
    '#required' => TRUE,
  );

  $form['mail'] = array(
    '#title' => 'Email',
    '#description' => 'Enter your valid email address',
    '#type' => 'textfield',
    '#required' => TRUE,
    '#element_validate' => array('user_profile_email_element_validate'),
  );

  $form['pass'] = array(
    '#type' => 'password',
    '#title' => t('Password'),
    '#maxlength' => 10,
    '#size' => 15,
    '#description' => "Enter your password",
    '#required' => TRUE,
  );

  $form['pass_confirm'] = array(
    '#type' => 'password',
    '#title' => t('Retype Password'),
    '#maxlength' => 10,
    '#size' => 15,
    '#description' => "Retype your password",
    '#element_validate' => array('user_profile_confirm_password_validate'),
    '#required' => TRUE,
  );

  $role_id = db_query("Select rid from role where name = 'coach'")->fetch();
  $role_id = $role_id->rid;
  if (user_has_role($role_id, NULL)) {
    $active = array('client' =>'Client');
  }
  else {
    $active = array('coach' => 'Coach', 'client' =>'Client');
  }

  $form['role'] = array(
    '#title' => 'Role',
    '#type' => 'radios',
    '#options' => $active,
    '#description' => "Select role",
    '#required' => TRUE,
   );

  // $form['address'] = array(
  //   '#type' => 'textarea',
  //   '#title' => t('Address'),
  //   '#required' => TRUE,
  //   '#description' => "Enter your address.",
  // );

  // $form['contact'] = array(
  //   '#type' => 'textfield',
  //   '#title' => 'Contact',
  //   // '#maxlength' => 11,
  //   '#required' => TRUE,
  //   '#description' => "Enter your contact number.",
  //   '#element_validate' => array('user_profile_contact_element_validate'),
  // );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );

  return $form;
}


function registration_form_submit($form, &$form_state) {
  $user_info = array();

  $user_info['name'] = $form_state['values']['user_name'];
  $user_info['mail'] = $form_state['values']['mail'];
  $user_info['pass'] = $form_state['values']['pass'];
  // $user_info['field_address']['und'][0]['value'] = $form_state['values']['address'];
  // $user_info['field_contact_no']['und'][0]['value'] = $form_state['values']['contact'];
  $user_info['field_role']['und'][0]['value'] = $form_state['values']['role'];
  $user_info['field_first_name']['und'][0]['value'] = $form_state['values']['first_name'];
  $user_info['field_last_name']['und'][0]['value'] = $form_state['values']['last_name'];

  if ($form_state['values']['role'] == 'coach') {
    $user_info['roles'] =  array(2 => 'authenticated', 5 => 'coach');
  }
  elseif ($form_state['values']['role'] == 'client') {
    $user_info['roles'] =  array(2 => 'authenticated', 6 => 'client');
  }

  $new_account = user_save(NULL, $user_info);
  $new_account->status = 1;
  user_save($new_account);
  drupal_set_message($user_info['name'] . " account has been created.", 'status');
}

/**
 * Validations on a User Registration Form
 */

function user_profile_email_element_validate($element, &$form_state, $form) {
   if (!valid_email_address($element['#value'])) {
     form_error($element, t('Please enter a valid email address.'));
   }
}

/*
function user_profile_contact_element_validate($element, &$form_state, $form) {
   if (!is_numeric($element['#value'])) {
     form_error($element, t('Please enter a valid contact number.'));
   }
   elseif (strlen($element['#value']) > 10) {
    form_error($element, t('Contact number limit exceeds 10'));
   }
}
*/

function user_profile_confirm_password_validate($element, &$form_state, $form) {
   if ($element['#value'] != $form_state['values']['pass']) {
     form_error($element, t('Retype password does not match.'));
   }
}

function user_name_validate($element, &$form_state, $form) {
  $username = $form_state['values']['user_name'];

  // check if this username exists or not.
  $query = db_select('users', 'u')
    ->fields('u', array('name'))
    ->condition('u.name', $username);

  $results = $query->execute()->rowCount();

  if ($results != 0 ) {
    form_error($element, t('User name already exists'));
  }
}
